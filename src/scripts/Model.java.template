package persistence.models;

/*
  This file was generated by generate_model.py
  Any changes you will make to it will be lost if you run the
  script again.
 
  DO NOT MODIFY!
 */

[IMPORTS]

import lombok.Data;
import lombok.NonNull;
import persistence.base.MappableModel;
import persistence.base.relations.RelatedField;
import persistence.base.relations.RelationType;
import persistence.base.serialization.Field;
import persistence.base.serialization.FieldType;
import persistence.base.serialization.FieldsMap;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.stream.Collectors;

@Data
public class [CLASS]Model implements MappableModel<[CLASS]> {
    private final String name = "[CLASS]";

    private Integer id;
    @NonNull
    private [CLASS] data;

    public [CLASS]Model([CLASS] data) {
        this.data = data;
    }

    public void setData(@NonNull [CLASS] data) {
        this.data = data;
    }

    @Override
    public FieldsMap map() {
        var map = new HashMap<String, Field>();
        if (this.id != null) {
            map.put("id", new Field("id", FieldType.Integer, this.id.toString()));
        }
[MAP_PUT]
        return new FieldsMap(map, "[CLASS]");
    }

    @Override
    public [CLASS] unmap(FieldsMap map) {
        assert map.getName().equals("[CLASS]");
[MAP_GET]
        var id = map.getMap().get("id");
        if (id != null) {
            this.id = Integer.valueOf(id.getValue());
        }
        return this.data;
    }

    @Override
    public [CLASS] unmapIfSet([CLASS] exitingData, FieldsMap map) {
        assert map.getName().equals("[CLASS]");
[MAP_GET_IF_SET]
        return this.unmap(map);
    }

    @Override
    public Collection<Field> getFields() {
        var fields = new ArrayList<Field>();
        fields.add(new Field("id", FieldType.Integer));
[GET_FIELDS]
        return fields;
    }

    @Override
    public void loadRelationField(String field, Object object) {
[LOAD_RELATIONS]
    }

    @Override
    public RelatedField[] getRelatedFields() {
[RELATED_FIELDS]
    }
}